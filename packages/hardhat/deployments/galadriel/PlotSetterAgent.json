{
  "address": "0x5924D749aF05395461FC4D9be03991DC8B7332b2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialOracleAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "systemPrompt",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "runId",
          "type": "uint256"
        }
      ],
      "name": "AgentRunCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOracleAddress",
          "type": "address"
        }
      ],
      "name": "OracleAddressUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "RunPlotSetterAgent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "runId",
          "type": "uint256"
        }
      ],
      "name": "addMessage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "agentRuns",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "responsesCount",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "max_iterations",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "is_finished",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "agentId",
          "type": "uint256"
        }
      ],
      "name": "getMessageHistoryContents",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "agentId",
          "type": "uint256"
        }
      ],
      "name": "getMessageHistoryRoles",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "runId",
          "type": "uint256"
        }
      ],
      "name": "isRunFinished",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "runId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "response",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "errorMessage",
          "type": "string"
        }
      ],
      "name": "onOracleFunctionResponse",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "runId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "id",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "content",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "functionName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "functionArguments",
              "type": "string"
            },
            {
              "internalType": "uint64",
              "name": "created",
              "type": "uint64"
            },
            {
              "internalType": "string",
              "name": "model",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "systemFingerprint",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "object",
              "type": "string"
            },
            {
              "internalType": "uint32",
              "name": "completionTokens",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "promptTokens",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "totalTokens",
              "type": "uint32"
            }
          ],
          "internalType": "struct IOracle.OpenAiResponse",
          "name": "response",
          "type": "tuple"
        },
        {
          "internalType": "string",
          "name": "errorMessage",
          "type": "string"
        }
      ],
      "name": "onOracleOpenAiLlmResponse",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracleAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "prompt",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "query",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "max_iterations",
          "type": "uint8"
        }
      ],
      "name": "runAgent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOracleAddress",
          "type": "address"
        }
      ],
      "name": "setOracleAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1e7b339ce1f99e0a65e7e698575ebab5d12bba4e3e659363fd888f12b63795f9",
  "receipt": {
    "to": "0x0000000000000000000000000000000000000000",
    "from": "0x324CF97D4373ef009FDF2F1afFc58406C86899Af",
    "contractAddress": "0x5924D749aF05395461FC4D9be03991DC8B7332b2",
    "transactionIndex": 0,
    "gasUsed": "2266392",
    "logsBloom": "0x
    "blockHash": "0xbb40b5e551de46d81858e78ecd05f9dd684cdeb92b15d7c47fc32947c0f07657",
    "transactionHash": "0x1e7b339ce1f99e0a65e7e698575ebab5d12bba4e3e659363fd888f12b63795f9",
    "logs": [],
    "blockNumber": 21061966,
    "cumulativeGasUsed": "0",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x68EC9556830AD097D661Df2557FBCeC166a0A075",
    "You are a helpful assistant \n"
  ],
  "numDeployments": 1,
  "solcInputHash": "b197ff4c073ec961116017dc4fa4c792",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOracleAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"systemPrompt\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"runId\",\"type\":\"uint256\"}],\"name\":\"AgentRunCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOracleAddress\",\"type\":\"address\"}],\"name\":\"OracleAddressUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"RunPlotSetterAgent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"runId\",\"type\":\"uint256\"}],\"name\":\"addMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"agentRuns\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"responsesCount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"max_iterations\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"is_finished\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"agentId\",\"type\":\"uint256\"}],\"name\":\"getMessageHistoryContents\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"agentId\",\"type\":\"uint256\"}],\"name\":\"getMessageHistoryRoles\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"runId\",\"type\":\"uint256\"}],\"name\":\"isRunFinished\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"runId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"response\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"}],\"name\":\"onOracleFunctionResponse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"runId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"functionName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"functionArguments\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"created\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"model\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"systemFingerprint\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"object\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"completionTokens\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"promptTokens\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"totalTokens\",\"type\":\"uint32\"}],\"internalType\":\"struct IOracle.OpenAiResponse\",\"name\":\"response\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"}],\"name\":\"onOracleOpenAiLlmResponse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"query\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"max_iterations\",\"type\":\"uint8\"}],\"name\":\"runAgent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOracleAddress\",\"type\":\"address\"}],\"name\":\"setOracleAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PlotSetterAgent.sol\":\"PlotSetterAgent\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/PlotSetterAgent.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.9;\\n\\n// Uncomment this line to use console.log\\n// import \\\"hardhat/console.sol\\\";\\nimport \\\"./interfaces/IOracle.sol\\\";\\n\\ncontract PlotSetterAgent {\\n\\tstring public prompt;\\n\\n\\tstruct Message {\\n\\t\\tstring role;\\n\\t\\tstring content;\\n\\t}\\n\\n\\tstruct AgentRun {\\n\\t\\taddress owner;\\n\\t\\tMessage[] messages;\\n\\t\\tuint responsesCount;\\n\\t\\tuint8 max_iterations;\\n\\t\\tbool is_finished;\\n\\t}\\n\\n\\tmapping(uint => AgentRun) public agentRuns;\\n\\tuint private agentRunCount;\\n\\n\\tevent AgentRunCreated(address indexed owner, uint indexed runId);\\n\\n\\taddress private owner;\\n\\taddress public oracleAddress;\\n\\n\\tevent OracleAddressUpdated(address indexed newOracleAddress);\\n\\n\\tIOracle.OpenAiRequest private config;\\n\\n\\tconstructor(address initialOracleAddress, string memory systemPrompt) {\\n\\t\\towner = msg.sender;\\n\\t\\toracleAddress = initialOracleAddress;\\n\\t\\tprompt = systemPrompt;\\n\\n\\t\\tconfig = IOracle.OpenAiRequest({\\n\\t\\t\\tmodel: \\\"gpt-4-turbo-preview\\\",\\n\\t\\t\\tfrequencyPenalty: 21, // > 20 for null\\n\\t\\t\\tlogitBias: \\\"\\\", // empty str for null\\n\\t\\t\\tmaxTokens: 1000, // 0 for null\\n\\t\\t\\tpresencePenalty: 21, // > 20 for null\\n\\t\\t\\tresponseFormat: '{\\\"type\\\":\\\"text\\\"}',\\n\\t\\t\\tseed: 0, // null\\n\\t\\t\\tstop: \\\"\\\", // null\\n\\t\\t\\ttemperature: 10, // Example temperature (scaled up, 10 means 1.0), > 20 means null\\n\\t\\t\\ttopP: 101, // Percentage 0-100, > 100 means null\\n\\t\\t\\ttools: \\\"[{\\\\\\\"type\\\\\\\":\\\\\\\"function\\\\\\\",\\\\\\\"function\\\\\\\":{\\\\\\\"name\\\\\\\":\\\\\\\"web_search\\\\\\\",\\\\\\\"description\\\\\\\":\\\\\\\"Search the internet\\\\\\\",\\\\\\\"parameters\\\\\\\":{\\\\\\\"type\\\\\\\":\\\\\\\"object\\\\\\\",\\\\\\\"properties\\\\\\\":{\\\\\\\"query\\\\\\\":{\\\\\\\"type\\\\\\\":\\\\\\\"string\\\\\\\",\\\\\\\"description\\\\\\\":\\\\\\\"Search query\\\\\\\"}},\\\\\\\"required\\\\\\\":[\\\\\\\"query\\\\\\\"]}}},{\\\\\\\"type\\\\\\\":\\\\\\\"function\\\\\\\",\\\\\\\"function\\\\\\\":{\\\\\\\"name\\\\\\\":\\\\\\\"image_generation\\\\\\\",\\\\\\\"description\\\\\\\":\\\\\\\"Generates an image using Dalle-2\\\\\\\",\\\\\\\"parameters\\\\\\\":{\\\\\\\"type\\\\\\\":\\\\\\\"object\\\\\\\",\\\\\\\"properties\\\\\\\":{\\\\\\\"prompt\\\\\\\":{\\\\\\\"type\\\\\\\":\\\\\\\"string\\\\\\\",\\\\\\\"description\\\\\\\":\\\\\\\"Dalle-2 prompt to generate an image\\\\\\\"}},\\\\\\\"required\\\\\\\":[\\\\\\\"prompt\\\\\\\"]}}}]\\\",\\n\\t\\t\\ttoolChoice: \\\"auto\\\", // \\\"none\\\" or \\\"auto\\\"\\n\\t\\t\\tuser: \\\"\\\" // null\\n\\t\\t});\\n\\t}\\n\\n\\tmodifier onlyOwner() {\\n\\t\\trequire(msg.sender == owner, \\\"Caller is not owner\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\tmodifier onlyOracle() {\\n\\t\\trequire(msg.sender == oracleAddress, \\\"Caller is not oracle\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\tfunction setOracleAddress(address newOracleAddress) public onlyOwner {\\n\\t\\trequire(msg.sender == owner, \\\"Caller is not the owner\\\");\\n\\t\\toracleAddress = newOracleAddress;\\n\\t\\temit OracleAddressUpdated(newOracleAddress);\\n\\t}\\n\\n\\tfunction RunPlotSetterAgent(\\n\\t\\t\\n\\t) public returns (uint i) {\\n\\t\\tstring memory query = \\\"You are a helpful assistant.\\\\n A murder has occurred and you need to describe a crime scene that involves the murdered person, the murderer (Mr. Mayer) who is the brother of that person, the sheriff (Sheriff Johnson) in charge of the investigation, and two witnesses (Mr. Robert and Mr. Max). \\\\n Task: \\\\n Search through the web for murder mystery stories and read them for inspiration. \\\\n Describe the crime scene in detail \\\\n Generate a picture to represent the crime scene, plot and characters\\\";\\n\\n\\t\\treturn runAgent(query, 3);\\n\\t}\\n\\n\\tfunction runAgent(\\n\\t\\tstring memory query,\\n\\t\\tuint8 max_iterations\\n\\t) public returns (uint i) {\\n\\t\\tAgentRun storage run = agentRuns[agentRunCount];\\n\\n\\t\\trun.owner = msg.sender;\\n\\t\\trun.is_finished = false;\\n\\t\\trun.responsesCount = 0;\\n\\t\\trun.max_iterations = max_iterations;\\n\\n\\t\\tMessage memory systemMessage;\\n\\t\\tsystemMessage.content = prompt;\\n\\t\\tsystemMessage.role = \\\"system\\\";\\n\\t\\trun.messages.push(systemMessage);\\n\\n\\t\\tMessage memory newMessage;\\n\\t\\tnewMessage.content = query;\\n\\t\\tnewMessage.role = \\\"user\\\";\\n\\t\\trun.messages.push(newMessage);\\n\\n\\t\\tuint currentId = agentRunCount;\\n\\t\\tagentRunCount = agentRunCount + 1;\\n\\n\\t\\tIOracle(oracleAddress).createOpenAiLlmCall(currentId, config);\\n\\t\\temit AgentRunCreated(run.owner, currentId);\\n\\n\\t\\treturn currentId;\\n\\t}\\n\\n\\tfunction onOracleOpenAiLlmResponse(\\n\\t\\tuint runId,\\n\\t\\tIOracle.OpenAiResponse memory response,\\n\\t\\tstring memory errorMessage\\n\\t) public onlyOracle {\\n\\t\\tAgentRun storage run = agentRuns[runId];\\n\\n\\t\\tif (!compareStrings(errorMessage, \\\"\\\")) {\\n\\t\\t\\tMessage memory newMessage;\\n\\t\\t\\tnewMessage.role = \\\"assistant\\\";\\n\\t\\t\\tnewMessage.content = errorMessage;\\n\\t\\t\\trun.messages.push(newMessage);\\n\\t\\t\\trun.responsesCount++;\\n\\t\\t\\trun.is_finished = true;\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\tif (run.responsesCount >= run.max_iterations) {\\n\\t\\t\\trun.is_finished = true;\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\tif (!compareStrings(response.content, \\\"\\\")) {\\n\\t\\t\\tMessage memory assistantMessage;\\n\\t\\t\\tassistantMessage.content = response.content;\\n\\t\\t\\tassistantMessage.role = \\\"assistant\\\";\\n\\t\\t\\trun.messages.push(assistantMessage);\\n\\t\\t\\trun.responsesCount++;\\n\\t\\t}\\n\\t\\tif (!compareStrings(response.functionName, \\\"\\\")) {\\n\\t\\t\\tIOracle(oracleAddress).createFunctionCall(\\n\\t\\t\\t\\trunId,\\n\\t\\t\\t\\tresponse.functionName,\\n\\t\\t\\t\\tresponse.functionArguments\\n\\t\\t\\t);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\trun.is_finished = true;\\n\\t}\\n\\n\\tfunction onOracleFunctionResponse(\\n\\t\\tuint runId,\\n\\t\\tstring memory response,\\n\\t\\tstring memory errorMessage\\n\\t) public onlyOracle {\\n\\t\\tAgentRun storage run = agentRuns[runId];\\n\\t\\trequire(!run.is_finished, \\\"Run is finished\\\");\\n\\t\\tstring memory result = response;\\n\\t\\tif (!compareStrings(errorMessage, \\\"\\\")) {\\n\\t\\t\\tresult = errorMessage;\\n\\t\\t}\\n\\t\\tMessage memory newMessage;\\n\\t\\tnewMessage.role = \\\"user\\\";\\n\\t\\tnewMessage.content = result;\\n\\t\\trun.messages.push(newMessage);\\n\\t\\trun.responsesCount++;\\n\\t\\tIOracle(oracleAddress).createOpenAiLlmCall(runId, config);\\n\\t}\\n\\n  // @notice Adds a new message to an existing chat run\\n    // @param message The new message to add\\n    // @param runId The ID of the chat run\\n    function addMessage(string memory message, uint runId) public {\\n        AgentRun storage run = agentRuns[runId];\\n        require(\\n            keccak256(abi.encodePacked(run.messages[run.responsesCount - 1].role)) == keccak256(abi.encodePacked(\\\"assistant\\\")),\\n            \\\"No response to previous message\\\"\\n        );\\n        require(\\n            run.owner == msg.sender, \\\"Only chat owner can add messages\\\"\\n        );\\n\\n        Message memory newMessage;\\n        newMessage.content = message;\\n        newMessage.role = \\\"user\\\";\\n        run.messages.push(newMessage);\\n        run.responsesCount++;\\n        \\n        IOracle(oracleAddress).createOpenAiLlmCall(runId, config);\\n    }\\n\\n\\n\\tfunction getMessageHistoryContents(\\n\\t\\tuint agentId\\n\\t) public view returns (string[] memory) {\\n\\t\\tstring[] memory messages = new string[](\\n\\t\\t\\tagentRuns[agentId].messages.length\\n\\t\\t);\\n\\t\\tfor (uint i = 0; i < agentRuns[agentId].messages.length; i++) {\\n\\t\\t\\tmessages[i] = agentRuns[agentId].messages[i].content;\\n\\t\\t}\\n\\t\\treturn messages;\\n\\t}\\n\\n\\tfunction getMessageHistoryRoles(\\n\\t\\tuint agentId\\n\\t) public view returns (string[] memory) {\\n\\t\\tstring[] memory roles = new string[](\\n\\t\\t\\tagentRuns[agentId].messages.length\\n\\t\\t);\\n\\t\\tfor (uint i = 0; i < agentRuns[agentId].messages.length; i++) {\\n\\t\\t\\troles[i] = agentRuns[agentId].messages[i].role;\\n\\t\\t}\\n\\t\\treturn roles;\\n\\t}\\n\\n\\tfunction isRunFinished(uint runId) public view returns (bool) {\\n\\t\\treturn agentRuns[runId].is_finished;\\n\\t}\\n\\n\\tfunction compareStrings(\\n\\t\\tstring memory a,\\n\\t\\tstring memory b\\n\\t) private pure returns (bool) {\\n\\t\\treturn (keccak256(abi.encodePacked((a))) ==\\n\\t\\t\\tkeccak256(abi.encodePacked((b))));\\n\\t}\\n}\\n\",\"keccak256\":\"0x3ff350bd98cf2464e620b167d7de7102559c4ad0b847a075b53246f4461e393a\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.13;\\n\\ninterface IOracle {\\n\\n    struct Content {\\n        string contentType;\\n        string value;\\n    }\\n\\n    struct Message {\\n        string role;\\n        Content [] content;\\n    }\\n\\n    struct OpenAiRequest {\\n        // \\\"gpt-4-turbo\\\", \\\"gpt-4-turbo-preview\\\" or \\\"gpt-3.5-turbo-1106\\\"\\n        string model;\\n        // int -20 - 20, Mapped to float -2.0 - 2.0. If bigger than 20 then null\\n        int8 frequencyPenalty;\\n        // JSON string or empty string\\n        string logitBias;\\n        // 0 for null\\n        uint32 maxTokens;\\n        // int -20 - 20, Mapped to float -2.0 - 2.0. If bigger than 20 then null\\n        int8 presencePenalty;\\n        // JSON string or empty string\\n        string responseFormat;\\n        // 0 for null\\n        uint seed;\\n        // empty str for null\\n        string stop;\\n        // 0-20, > 20 for null\\n        uint temperature;\\n        // 0-100  percentage, > 100 for null\\n        uint topP;\\n        // JSON list for tools in OpenAI format, empty for null, names have to match the supported tools\\n        string tools;\\n        // \\\"none\\\", \\\"auto\\\" or empty str which defaults to auto on OpenAI side\\n        string toolChoice;\\n        string user;\\n    }\\n\\n    struct OpenAiResponse {\\n        string id;\\n\\n        // either content is an empty srt or functionName and functionArguments\\n        string content;\\n        string functionName;\\n        string functionArguments;\\n\\n        uint64 created;\\n        string model;\\n        string systemFingerprint;\\n        // kind of pointless since its always \\\"chat.completion\\\"?\\n        string object;\\n\\n        uint32 completionTokens;\\n        uint32 promptTokens;\\n        uint32 totalTokens;\\n    }\\n\\n    struct GroqRequest {\\n        // \\\"llama3-8b-8192\\\", \\\"llama3-70b-8192\\\", \\\"mixtral-8x7b-32768\\\" or \\\"gemma-7b-it\\\"\\n        string model;\\n        // int -20 - 20, Mapped to float -2.0 - 2.0. If bigger than 20 then null\\n        int8 frequencyPenalty;\\n        // JSON string or empty string\\n        string logitBias;\\n        // 0 for null\\n        uint32 maxTokens;\\n        // int -20 - 20, Mapped to float -2.0 - 2.0. If bigger than 20 then null\\n        int8 presencePenalty;\\n        // JSON string or empty string\\n        string responseFormat;\\n        // 0 for null\\n        uint seed;\\n        // empty str for null\\n        string stop;\\n        // 0-20, > 20 for null\\n        uint temperature;\\n        // 0-100  percentage, > 100 for null\\n        uint topP;\\n        string user;\\n    }\\n\\n    struct GroqResponse {\\n        string id;\\n\\n        string content;\\n\\n        uint64 created;\\n        string model;\\n        string systemFingerprint;\\n        // kind of pointless since its always \\\"chat.completion\\\"?\\n        string object;\\n\\n        uint32 completionTokens;\\n        uint32 promptTokens;\\n        uint32 totalTokens;\\n    }\\n\\n    struct KnowledgeBaseQueryRequest {\\n        string cid;\\n        string query;\\n        uint32 num_documents;\\n    }\\n\\n    function createLlmCall(\\n        uint promptId\\n    ) external returns (uint);\\n\\n    function createGroqLlmCall(\\n        uint promptId,\\n        GroqRequest memory request\\n    ) external returns (uint);\\n\\n    function createOpenAiLlmCall(\\n        uint promptId,\\n        OpenAiRequest memory request\\n    ) external returns (uint);\\n\\n    function createFunctionCall(\\n        uint functionCallbackId,\\n        string memory functionType,\\n        string memory functionInput\\n    ) external returns (uint i);\\n\\n    function createKnowledgeBaseQuery(\\n        uint kbQueryCallbackId,\\n        string memory cid,\\n        string memory query,\\n        uint32 num_documents\\n    ) external returns (uint i);\\n}\",\"keccak256\":\"0xadf297ae3315255b8df039ffbd9fd4ea11f01d4d109c49d8ec765ae9b0cb578d\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x6080604052346200100b5762002d1c803803806200001d8162001050565b9283398101906040818303126200100b5780516001600160a01b03811691908290036200100b576020810151906001600160401b0382116200100b570182601f820112156200100b578051906001600160401b03821162000921576200008d601f8301601f191660200162001050565b93828552602083830101116200100b5760005b82811062000ff557505060206000918401015260018060a01b0319338160035416176003556004541617600455805160018060401b0381116200092157600054600181811c9116801562000fea575b60208210146200090057601f811162000f92575b50602091601f821160011462000f1d5791819260009262000f11575b50508160011b916000199060031b1c1916176000555b6040516101a081016001600160401b0381118282101762000921576040526200015d62001010565b601381527f6770742d342d747572626f2d707265766965770000000000000000000000000060208201528152601560208201526200019a62001030565b6000815260408201526103e8606082015260156080820152620001bc62001010565b600f81526e7b2274797065223a2274657874227d60881b602082015260a0820152600060c0820152620001ee62001030565b6000815260e0820152600a61010082015260656101208201526040516001600160401b03610200820190811190821117620009215761020081016040526101d381527f5b7b2274797065223a2266756e6374696f6e222c2266756e6374696f6e223a7b60208201527f226e616d65223a227765625f736561726368222c226465736372697074696f6e60408201527f223a225365617263682074686520696e7465726e6574222c22706172616d657460608201527f657273223a7b2274797065223a226f626a656374222c2270726f70657274696560808201527f73223a7b227175657279223a7b2274797065223a22737472696e67222c22646560a08201527f736372697074696f6e223a22536561726368207175657279227d7d2c2272657160c08201527f7569726564223a5b227175657279225d7d7d7d2c7b2274797065223a2266756e60e08201527f6374696f6e222c2266756e6374696f6e223a7b226e616d65223a22696d6167656101008201527f5f67656e65726174696f6e222c226465736372697074696f6e223a2247656e656101208201527f726174657320616e20696d616765207573696e672044616c6c652d32222c22706101408201527f6172616d6574657273223a7b2274797065223a226f626a656374222c2270726f6101608201527f70657274696573223a7b2270726f6d7074223a7b2274797065223a22737472696101808201527f6e67222c226465736372697074696f6e223a2244616c6c652d322070726f6d706101a08201527f7420746f2067656e657261746520616e20696d616765227d7d2c2272657175696101c08201527f726564223a5b2270726f6d7074225d7d7d7d5d000000000000000000000000006101e08201526101408201526200048262001010565b60048152636175746f60e01b6020820152610160820152620004a362001030565b6000815261018082015280518051906001600160401b038211620009215760055490600182811c9216801562000f06575b6020831014620009005781601f84931162000eb0575b50602090601f831160011462000e215760009262000e15575b50508160011b916000199060031b1c1916176005555b602081015160ff19600654169060ff1617600655604081015180519060018060401b038211620009215760075490600182811c9216801562000e0a575b6020831014620009005781601f84931162000da9575b50602090601f831160011462000d2b5760009262000d1f575b50508160011b916000199060031b1c1916176007555b63ffffffff60608201511660085490608083015160201b64ff00000000169164ffffffffff1916171760085560a081015180519060018060401b038211620009215760095490600182811c9216801562000d14575b6020831014620009005781601f84931162000cb3575b50602090601f831160011462000c355760009262000c29575b50508160011b916000199060031b1c1916176009555b60c0810151600a5560e08101518051906001600160401b0382116200092157600b5490600182811c9216801562000c1e575b6020831014620009005781601f84931162000bac575b50602090601f831160011462000b1d5760009262000b11575b50508160011b916000199060031b1c191617600b555b610100810151600c55610120810151600d5561014081015180519091906001600160401b0381116200092157600e54600181811c9116801562000b06575b60208210146200090057601f811162000a9c575b50602092601f821160011462000a31579281929360009262000a25575b50508160011b916000199060031b1c191617600e555b610160810151805191906001600160401b0383116200092157600f54600181811c9116801562000a1a575b60208210146200090057601f8111620009c1575b50602090601f8411600114620009435761018093916000918362000937575b50508160011b916000199060031b1c191617600f555b015180516001600160401b0381116200092157601054600181811c9116801562000916575b60208210146200090057601f811162000896575b50602091601f82116001146200082c5791819260009262000820575b50508160011b916000199060031b1c1916176010555b604051611c259081620010778239f35b015190503880620007fa565b601f19821692601060005260206000209160005b8581106200087d5750836001951062000863575b505050811b0160105562000810565b015160001960f88460031b161c1916905538808062000854565b9192602060018192868501518155019401920162000840565b60106000527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae672601f830160051c81019160208410620008f5575b601f0160051c01905b818110620008e85750620007de565b60008155600101620008d9565b9091508190620008d0565b634e487b7160e01b600052602260045260246000fd5b90607f1690620007ca565b634e487b7160e01b600052604160045260246000fd5b0151905038806200078f565b600f600090815260008051602062002cfc833981519152929190601f198616905b818110620009a857509160019391866101809794106200098e575b505050811b01600f55620007a5565b015160001960f88460031b161c191690553880806200097f565b9293602060018192878601518155019501930162000964565b600f60005260008051602062002cfc833981519152601f850160051c8101916020861062000a0f575b601f0160051c01905b81811062000a02575062000770565b60008155600101620009f3565b9091508190620009ea565b90607f16906200075c565b0151905038806200071b565b601f19821693600e60005260206000209160005b86811062000a83575083600195961062000a69575b505050811b01600e5562000731565b015160001960f88460031b161c1916905538808062000a5a565b9192602060018192868501518155019401920162000a45565b600e6000527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd601f830160051c8101916020841062000afb575b601f0160051c01905b81811062000aee5750620006fe565b6000815560010162000adf565b909150819062000ad6565b90607f1690620006ea565b01519050388062000696565b600b600090815293507f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db991905b601f198416851062000b90576001945083601f1981161062000b76575b505050811b01600b55620006ac565b015160001960f88460031b161c1916905538808062000b67565b8181015183556020948501946001909301929091019062000b4a565b600b6000529091507f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9601f840160051c81016020851062000c16575b90849392915b601f830160051c8201811062000c065750506200067d565b6000815585945060010162000bee565b508062000be8565b91607f169162000667565b0151905038806200061f565b60096000908152935060008051602062002cdc83398151915291905b601f198416851062000c97576001945083601f1981161062000c7d575b505050811b0160095562000635565b015160001960f88460031b161c1916905538808062000c6e565b8181015183556020948501946001909301929091019062000c51565b600960005290915060008051602062002cdc833981519152601f840160051c81016020851062000d0c575b90849392915b601f830160051c8201811062000cfc57505062000606565b6000815585945060010162000ce4565b508062000cde565b91607f1691620005f0565b01519050388062000585565b60076000908152935060008051602062002cbc83398151915291905b601f198416851062000d8d576001945083601f1981161062000d73575b505050811b016007556200059b565b015160001960f88460031b161c1916905538808062000d64565b8181015183556020948501946001909301929091019062000d47565b600760005290915060008051602062002cbc833981519152601f840160051c81016020851062000e02575b90849392915b601f830160051c8201811062000df25750506200056c565b6000815585945060010162000dda565b508062000dd4565b91607f169162000556565b01519050388062000503565b6005600090815293507f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db091905b601f198416851062000e94576001945083601f1981161062000e7a575b505050811b0160055562000519565b015160001960f88460031b161c1916905538808062000e6b565b8181015183556020948501946001909301929091019062000e4e565b90915060056000526020600020601f840160051c81016020851062000efe575b90849392915b601f830160051c8201811062000eee575050620004ea565b6000815585945060010162000ed6565b508062000ed0565b91607f1691620004d4565b0151905038806200011f565b6000808052601f1983169360008051602062002c9c8339815191529290915b85811062000f795750836001951062000f5f575b505050811b0160005562000135565b015160001960f88460031b161c1916905538808062000f50565b9192602060018192868501518155019401920162000f3c565b6000805260008051602062002c9c833981519152601f830160051c8101916020841062000fdf575b601f0160051c01905b81811062000fd2575062000103565b6000815560010162000fc3565b909150819062000fba565b90607f1690620000ef565b80602080928401015182828801015201620000a0565b600080fd5b60408051919082016001600160401b038111838210176200092157604052565b60405190602082016001600160401b038111838210176200092157604052565b6040519190601f01601f191682016001600160401b03811183821017620009215760405256fe608060408181526004908136101561001657600080fd5b600092833560e01c9081632b7b5bdd14610ae0575080632eab9c8114610aad5780634c69c00f14610a095780634cecd88e1461084b5780637397454d146106d05780637c65d71114610692578063941fac3714610431578063a89ae4ba14610409578063c63b0295146103b2578063daec051f146101fd578063eb17429a146101645763ed6e39e5146100a857600080fd5b34610160576020918260031936011261015c5792919235918281526001938481526100d7858484200154611b3c565b9382865b6100f1575b8451806100ed888261105b565b0390f35b818452868352868585200154811015610157579061014e8261012c6101336101208897968c8b819b20016110e7565b50895192838092610f7d565b0382610e10565b61013d828a611b86565b526101488189611b86565b50611927565b909192936100db565b6100e0565b8380fd5b8280fd5b5091346101fa57602091826003193601126101f6579190913591828152600191828152610195838684200154611b3c565b9382845b6101ab575b8651806100ed888261105b565b8184528483528487852001548110156101f157906101e882866101336101d8889796838d819b20016110e7565b5061012c8c518094819301610f7d565b90919293610199565b61019e565b5080fd5b80fd5b5034610160578060031936011261016057813567ffffffffffffffff811161015c5761022c9036908401610e32565b926024359260ff84168094036101f65760025482526102df6020956001875284842095336bffffffffffffffffffffffff60a01b885416178755600387019081548660028a015561ffff19161790556102836110bd565b85516102928161012c81610ed9565b8882015285516102a181610dc2565b600681526573797374656d60d01b8982015281526102c3600188019182611119565b6102cb6110bd565b91888301526102d861137a565b8252611119565b600254936001850180861161039f5760025561031d868660018060a01b03948581541690878951809681958294633c38a5f560e01b8452830161139a565b03925af180156103955786949392918891610362575b50505416907f9697c88a6be3b3ed5062f2dcbd719a10914832320686f14e24f7756210a6685e9080a351908152f35b908092939495503d831161038e575b61037b8183610e10565b8101031261016057908492918638610333565b503d610371565b85513d86823e3d90fd5b634e487b7160e01b845260118352602484fd5b509034610160576020366003190112610160578160809360ff9235815260016020522060018060a01b03815416926003600283015492015491815194855260208501528282169084015260081c1615156060820152f35b5090346101605782600319360112610160575490516001600160a01b03909116815260209150f35b5034610160578060031936011261016057813567ffffffffffffffff811161015c576104609036908401610e32565b91602435908185526001936020948086528487209181830160028401928354600019810190811161067f5790896104988c93856110e7565b50918a51928391838301959180546104af81610e9f565b95818416918215610660575050600114610623575b50506104d9925003601f198101835282610e10565b51902087518981019068185cdcda5cdd185b9d60ba1b8252600981526104fe81610dc2565b519020036105e05792546001600160a01b0393908416330361059f579161053061055a979694928996946102cb6110bd565b61053a8154611927565b905581541690878551809781958294633c38a5f560e01b8452830161139a565b03925af1908115610596575061056e578280f35b813d831161058f575b6105818183610e10565b810103126101fa5738808280f35b503d610577565b513d85823e3d90fd5b60648589808a519262461bcd60e51b845283015260248201527f4f6e6c792063686174206f776e65722063616e20616464206d657373616765736044820152fd5b865162461bcd60e51b8152808601899052601f60248201527f4e6f20726573706f6e736520746f2070726576696f7573206d657373616765006044820152606490fd5b8f91908f935082528282205b858310610647575050506104d99282010138806104c4565b819392945080548386890101520192018d91859361062f565b92509350506104d994915060ff191686528015150282010138806104c4565b634e487b7160e01b8b526011875260248bfd5b8382346101f657816003193601126101f65780516100ed916106be826106b781610ed9565b0383610e10565b51918291602083526020830190611036565b508290346101f65760603660031901126101f65767ffffffffffffffff908335602435838111610847576107079036908701610e32565b926044358181116108435761071f9036908801610e32565b9360018060a01b03916107368389541633146118bf565b838752602095600187528588209260ff600385015460081c1661080e5786519092888201908111828210176107fb57936107ac8b948a97946107856002958e8d9c9a6107b79e52815282611b9a565b156107f3575b506107946110bd565b9061079d61137a565b82528882015260018301611119565b0161053a8154611927565b03925af190811561059657506107cb578280f35b813d83116107ec575b6107de8183610e10565b810103126101fa5781808280f35b503d6107d4565b90508c61078b565b634e487b7160e01b8a5260418b5260248afd5b865162461bcd60e51b8152808b01899052600f60248201526e149d5b881a5cc8199a5b9a5cda1959608a1b6044820152606490fd5b8580fd5b8480fd5b5090346101605760031960603682011261015c5760243567ffffffffffffffff938482116108435761016080938336030112610843578051928301838110868211176109f6578152818401358581116109f2576108ad90853691850101610e32565b835260248201358581116109f2576108ca90853691850101610e32565b602084015260448201358581116109f2576108ea90853691850101610e32565b9083015260648101358481116108435761090990843691840101610e32565b60608301526084810135848116810361084357608083015260a48101358481116108435761093c90843691840101610e32565b60a083015260c48101358481116108435761095c90843691840101610e32565b60c083015260e4810135848111610843576109b49161098361014492863691840101610e32565b60e08501526109956101048201610e8e565b6101008501526109a86101248201610e8e565b61012085015201610e8e565b61014082015260443592831161015c576109d46109ef9336908401610e32565b916109e960018060a01b0382541633146118bf565b3561194c565b80f35b8680fd5b634e487b7160e01b875260418552602487fd5b5090346101605760203660031901126101605780356001600160a01b03818116939184900361084757600354163303610a74575080546001600160a01b031916821790557f107a9fafffb7ac890f780879e423760c9ffea8dcee8045681f40f542aede2cb88280a280f35b906020606492519162461bcd60e51b8352820152601360248201527221b0b63632b91034b9903737ba1037bbb732b960691b6044820152fd5b5090346101605760203660031901126101605760038260209460ff933581526001865220015460081c1690519015158152f35b92939050346101fa57806003193601126101fa57610220830183811067ffffffffffffffff821117610daf5782526101ea83526020937f596f752061726520612068656c7066756c20617373697374616e742e0a204120858501527f6d757264657220686173206f6363757272656420616e6420796f75206e656564838501527f20746f2064657363726962652061206372696d65207363656e6520746861742060608501527f696e766f6c76657320746865206d7572646572656420706572736f6e2c20746860808501527f65206d7572646572657220284d722e204d61796572292077686f20697320746860a08501527f652062726f74686572206f66207468617420706572736f6e2c2074686520736860c08501527f6572696666202853686572696666204a6f686e736f6e2920696e20636861726760e08501527f65206f662074686520696e7665737469676174696f6e2c20616e642074776f206101008501527f7769746e657373657320284d722e20526f6265727420616e64204d722e204d616101208501527f78292e200a205461736b3a200a20536561726368207468726f756768207468656101408501527f2077656220666f72206d7572646572206d7973746572792073746f72696573206101608501527f616e642072656164207468656d20666f7220696e737069726174696f6e2e200a6101808501527f20446573637269626520746865206372696d65207363656e6520696e206465746101a08501527f61696c200a2047656e65726174652061207069637475726520746f20726570726101c08501527f6573656e7420746865206372696d65207363656e652c20706c6f7420616e64206101e0850152696368617261637465727360b01b6102008501526002548252600185526102df83832094336bffffffffffffffffffffffff60a01b87541617865560038601600381548660028a015561ffff19161790556102836110bd565b634e487b7160e01b825260418552602482fd5b6040810190811067ffffffffffffffff821117610dde57604052565b634e487b7160e01b600052604160045260246000fd5b6020810190811067ffffffffffffffff821117610dde57604052565b90601f8019910116810190811067ffffffffffffffff821117610dde57604052565b81601f82011215610e895780359067ffffffffffffffff8211610dde5760405192610e67601f8401601f191660200185610e10565b82845260208383010111610e8957816000926020809301838601378301015290565b600080fd5b359063ffffffff82168203610e8957565b90600182811c92168015610ecf575b6020831014610eb957565b634e487b7160e01b600052602260045260246000fd5b91607f1691610eae565b9060009160005490610eea82610e9f565b80825291600190818116908115610f605750600114610f0857505050565b91929350600080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563916000925b848410610f4857505060209250010190565b80546020858501810191909152909301928101610f36565b915050602093945060ff929192191683830152151560051b010190565b9060009291805491610f8e83610e9f565b918282526001938481169081600014610ff05750600114610fb0575b50505050565b90919394506000526020928360002092846000945b838610610fdc575050505001019038808080610faa565b805485870183015294019385908201610fc5565b9294505050602093945060ff191683830152151560051b01019038808080610faa565b60005b8381106110265750506000910152565b8181015183820152602001611016565b9060209161104f81518092818552858086019101611013565b601f01601f1916010190565b602080820190808352835180925260408301928160408460051b8301019501936000915b84831061108f5750505050505090565b90919293949584806110ad600193603f198682030187528a51611036565b980193019301919493929061107f565b604051906040820182811067ffffffffffffffff821117610dde5760405260606020838281520152565b80548210156111035760005260206000209060011b0190600090565b634e487b7160e01b600052603260045260246000fd5b805468010000000000000000811015610dde5761113d9060019283820181556110e7565b61136457825180519167ffffffffffffffff92838111610dde5784906111638354610e9f565b93601f94858111611313575b506020908583116001146112aa5760209492916000918361129f575b5050600019600383901b1c191690831b1781555b019401518051928311610dde576111b68554610e9f565b828111611257575b5060209183116001146111f7579282939183926000946111ec575b50501b916000199060031b1c1916179055565b0151925038806111d9565b90601f198316918560005283826000209360005b8782821061123e57505010611225575b505050811b019055565b015160001960f88460031b161c1916905538808061121b565b848601518755909501946020948501948793500161120b565b8560005260206000208380860160051c82019260208710611296575b0160051c019085905b82811061128a5750506111be565b6000815501859061127c565b92508192611273565b01519050388061118b565b90601f1983169185600052816000209260005b8181106112fb575091859391856020989694106112e2575b505050811b01815561119f565b015160001960f88460031b161c191690553880806112d5565b8284015185558a9690940193602093840193016112bd565b909192506000848152602081208680860160051c8201936020871061135b575b908a9695949392910160051c01915b82811061135057505061116f565b818155899501611342565b93508193611333565b634e487b7160e01b600052600060045260246000fd5b6040519061138782610dc2565b60048252633ab9b2b960e11b6020830152565b90815260206040818301526101a09182604082015260006005918254946113c086610e9f565b806101e084015260019687811690816000146118a15750600114611844575b5060065460000b6060830152603f1990818385030160808401526000936007549061140982610e9f565b91828252888a821691826000146118265750506001146117cc575b505060085463ffffffff811660a0850152861c60000b60c0840152818385030160e08401526000936009549061145982610e9f565b91828252888a821691826000146117ae575050600114611754575b5050600a546101008401528284038201610120840152600b5460009461149982610e9f565b91828252888a821691826000146117365750506001146116dc575b5050600c54610140840152600d546101608401528284038201610180840152600e546000946114e282610e9f565b91828252888a821691826000146116be575050600114611664575b5050828403820190830152600f5460009361151782610e9f565b918282528789821691826000146116445750506001146115e6575b50506101c0908284030191015260009360105461154e81610e9f565b808452938183169182156115c757505060011461156d575b5050505090565b9293509060106000527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae67292846000945b8386106115b35750505050010138808080611566565b80548587018301529401938590820161159d565b925093929495505060ff1916848401521515901b010138808080611566565b8691929450600f6000527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80290886000925b85841061162e57505001019290506101c038611532565b80548385018601528994909301928a9101611617565b60ff191683820152921515871b90910190910193506101c0905038611532565b87929550600e6000527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd91896000935b8285106116a85750505001019238806114fd565b80548585018701528a95909401938b9101611694565b60ff191683820152921515881b9091019091019450389050806114fd565b87929550600b6000527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db991896000935b8285106117205750505001019238806114b4565b80548585018701528a95909401938b910161170c565b60ff191683820152921515881b9091019091019450389050806114b4565b8792955060096000527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af91896000935b828510611798575050500101923880611474565b80548585018701528a95909401938b9101611784565b60ff191683820152921515881b909101909101945038905080611474565b8792955060076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68891896000935b828510611810575050500101923880611424565b80548585018701528a95909401938b91016117fc565b60ff191683820152921515881b909101909101945038905080611424565b909250836000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db085876000925b84841061188b57505050610200915082010191386113df565b8054610200858801015201910190878791611872565b929450506102009160ff1916828401521515841b82010191386113df565b156118c657565b60405162461bcd60e51b815260206004820152601460248201527343616c6c6572206973206e6f74206f7261636c6560601b6044820152606490fd5b6040519061190f82610dc2565b6009825268185cdcda5cdd185b9d60ba1b6020830152565b60001981146119365760010190565b634e487b7160e01b600052601160045260246000fd5b91909160009080825260209060018252604080842094611979825161197081610df4565b86815282611b9a565b15611ad9575060028501805495600381019687549060ff82161115611ac457508488016119b581518551906119ad82610df4565b898252611b9a565b15611a8c575b5050508086016119da81518351906119d282610df4565b878252611b9a565b156119f5575050835461ff0019166101001790935550505050565b8395508496611a4092949395606060018060a01b0360045416935192015196611a52875198899687958694634b04236b60e01b86526004860152606060248601526064850190611036565b83810360031901604485015290611036565b03925af19081156105965750611a6757505050565b813d8311611a85575b611a7a8183610e10565b810103126101fa5750565b503d611a70565b6001611ab092611a9a6110bd565b925188840152611aa8611902565b835201611119565b611aba8154611927565b90553880806119bb565b61ff0019166101001790965550505050505050565b91505060039450611b049250611aed6110bd565b91611af6611902565b835282015260018301611119565b60028101611b128154611927565b905501805461ff001916610100179055565b67ffffffffffffffff8111610dde5760051b60200190565b90611b4682611b24565b611b536040519182610e10565b8281528092611b64601f1991611b24565b019060005b828110611b7557505050565b806060602080938501015201611b69565b80518210156111035760209160051b010190565b9060405191602092611bc8848281611bbb8183019687815193849201611013565b8101038084520182610e10565b51902091611be8604051918281611bbb8183019687815193849201611013565b519020149056fea26469706673582212200baa0ac57942ab1e3758c68910dbaa2c1819ce24d2aa01e0af0a4b5e04da738964736f6c63430008110033290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563a66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6886e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac802",
  "deployedBytecode": "0x608060408181526004908136101561001657600080fd5b600092833560e01c9081632b7b5bdd14610ae0575080632eab9c8114610aad5780634c69c00f14610a095780634cecd88e1461084b5780637397454d146106d05780637c65d71114610692578063941fac3714610431578063a89ae4ba14610409578063c63b0295146103b2578063daec051f146101fd578063eb17429a146101645763ed6e39e5146100a857600080fd5b34610160576020918260031936011261015c5792919235918281526001938481526100d7858484200154611b3c565b9382865b6100f1575b8451806100ed888261105b565b0390f35b818452868352868585200154811015610157579061014e8261012c6101336101208897968c8b819b20016110e7565b50895192838092610f7d565b0382610e10565b61013d828a611b86565b526101488189611b86565b50611927565b909192936100db565b6100e0565b8380fd5b8280fd5b5091346101fa57602091826003193601126101f6579190913591828152600191828152610195838684200154611b3c565b9382845b6101ab575b8651806100ed888261105b565b8184528483528487852001548110156101f157906101e882866101336101d8889796838d819b20016110e7565b5061012c8c518094819301610f7d565b90919293610199565b61019e565b5080fd5b80fd5b5034610160578060031936011261016057813567ffffffffffffffff811161015c5761022c9036908401610e32565b926024359260ff84168094036101f65760025482526102df6020956001875284842095336bffffffffffffffffffffffff60a01b885416178755600387019081548660028a015561ffff19161790556102836110bd565b85516102928161012c81610ed9565b8882015285516102a181610dc2565b600681526573797374656d60d01b8982015281526102c3600188019182611119565b6102cb6110bd565b91888301526102d861137a565b8252611119565b600254936001850180861161039f5760025561031d868660018060a01b03948581541690878951809681958294633c38a5f560e01b8452830161139a565b03925af180156103955786949392918891610362575b50505416907f9697c88a6be3b3ed5062f2dcbd719a10914832320686f14e24f7756210a6685e9080a351908152f35b908092939495503d831161038e575b61037b8183610e10565b8101031261016057908492918638610333565b503d610371565b85513d86823e3d90fd5b634e487b7160e01b845260118352602484fd5b509034610160576020366003190112610160578160809360ff9235815260016020522060018060a01b03815416926003600283015492015491815194855260208501528282169084015260081c1615156060820152f35b5090346101605782600319360112610160575490516001600160a01b03909116815260209150f35b5034610160578060031936011261016057813567ffffffffffffffff811161015c576104609036908401610e32565b91602435908185526001936020948086528487209181830160028401928354600019810190811161067f5790896104988c93856110e7565b50918a51928391838301959180546104af81610e9f565b95818416918215610660575050600114610623575b50506104d9925003601f198101835282610e10565b51902087518981019068185cdcda5cdd185b9d60ba1b8252600981526104fe81610dc2565b519020036105e05792546001600160a01b0393908416330361059f579161053061055a979694928996946102cb6110bd565b61053a8154611927565b905581541690878551809781958294633c38a5f560e01b8452830161139a565b03925af1908115610596575061056e578280f35b813d831161058f575b6105818183610e10565b810103126101fa5738808280f35b503d610577565b513d85823e3d90fd5b60648589808a519262461bcd60e51b845283015260248201527f4f6e6c792063686174206f776e65722063616e20616464206d657373616765736044820152fd5b865162461bcd60e51b8152808601899052601f60248201527f4e6f20726573706f6e736520746f2070726576696f7573206d657373616765006044820152606490fd5b8f91908f935082528282205b858310610647575050506104d99282010138806104c4565b819392945080548386890101520192018d91859361062f565b92509350506104d994915060ff191686528015150282010138806104c4565b634e487b7160e01b8b526011875260248bfd5b8382346101f657816003193601126101f65780516100ed916106be826106b781610ed9565b0383610e10565b51918291602083526020830190611036565b508290346101f65760603660031901126101f65767ffffffffffffffff908335602435838111610847576107079036908701610e32565b926044358181116108435761071f9036908801610e32565b9360018060a01b03916107368389541633146118bf565b838752602095600187528588209260ff600385015460081c1661080e5786519092888201908111828210176107fb57936107ac8b948a97946107856002958e8d9c9a6107b79e52815282611b9a565b156107f3575b506107946110bd565b9061079d61137a565b82528882015260018301611119565b0161053a8154611927565b03925af190811561059657506107cb578280f35b813d83116107ec575b6107de8183610e10565b810103126101fa5781808280f35b503d6107d4565b90508c61078b565b634e487b7160e01b8a5260418b5260248afd5b865162461bcd60e51b8152808b01899052600f60248201526e149d5b881a5cc8199a5b9a5cda1959608a1b6044820152606490fd5b8580fd5b8480fd5b5090346101605760031960603682011261015c5760243567ffffffffffffffff938482116108435761016080938336030112610843578051928301838110868211176109f6578152818401358581116109f2576108ad90853691850101610e32565b835260248201358581116109f2576108ca90853691850101610e32565b602084015260448201358581116109f2576108ea90853691850101610e32565b9083015260648101358481116108435761090990843691840101610e32565b60608301526084810135848116810361084357608083015260a48101358481116108435761093c90843691840101610e32565b60a083015260c48101358481116108435761095c90843691840101610e32565b60c083015260e4810135848111610843576109b49161098361014492863691840101610e32565b60e08501526109956101048201610e8e565b6101008501526109a86101248201610e8e565b61012085015201610e8e565b61014082015260443592831161015c576109d46109ef9336908401610e32565b916109e960018060a01b0382541633146118bf565b3561194c565b80f35b8680fd5b634e487b7160e01b875260418552602487fd5b5090346101605760203660031901126101605780356001600160a01b03818116939184900361084757600354163303610a74575080546001600160a01b031916821790557f107a9fafffb7ac890f780879e423760c9ffea8dcee8045681f40f542aede2cb88280a280f35b906020606492519162461bcd60e51b8352820152601360248201527221b0b63632b91034b9903737ba1037bbb732b960691b6044820152fd5b5090346101605760203660031901126101605760038260209460ff933581526001865220015460081c1690519015158152f35b92939050346101fa57806003193601126101fa57610220830183811067ffffffffffffffff821117610daf5782526101ea83526020937f596f752061726520612068656c7066756c20617373697374616e742e0a204120858501527f6d757264657220686173206f6363757272656420616e6420796f75206e656564838501527f20746f2064657363726962652061206372696d65207363656e6520746861742060608501527f696e766f6c76657320746865206d7572646572656420706572736f6e2c20746860808501527f65206d7572646572657220284d722e204d61796572292077686f20697320746860a08501527f652062726f74686572206f66207468617420706572736f6e2c2074686520736860c08501527f6572696666202853686572696666204a6f686e736f6e2920696e20636861726760e08501527f65206f662074686520696e7665737469676174696f6e2c20616e642074776f206101008501527f7769746e657373657320284d722e20526f6265727420616e64204d722e204d616101208501527f78292e200a205461736b3a200a20536561726368207468726f756768207468656101408501527f2077656220666f72206d7572646572206d7973746572792073746f72696573206101608501527f616e642072656164207468656d20666f7220696e737069726174696f6e2e200a6101808501527f20446573637269626520746865206372696d65207363656e6520696e206465746101a08501527f61696c200a2047656e65726174652061207069637475726520746f20726570726101c08501527f6573656e7420746865206372696d65207363656e652c20706c6f7420616e64206101e0850152696368617261637465727360b01b6102008501526002548252600185526102df83832094336bffffffffffffffffffffffff60a01b87541617865560038601600381548660028a015561ffff19161790556102836110bd565b634e487b7160e01b825260418552602482fd5b6040810190811067ffffffffffffffff821117610dde57604052565b634e487b7160e01b600052604160045260246000fd5b6020810190811067ffffffffffffffff821117610dde57604052565b90601f8019910116810190811067ffffffffffffffff821117610dde57604052565b81601f82011215610e895780359067ffffffffffffffff8211610dde5760405192610e67601f8401601f191660200185610e10565b82845260208383010111610e8957816000926020809301838601378301015290565b600080fd5b359063ffffffff82168203610e8957565b90600182811c92168015610ecf575b6020831014610eb957565b634e487b7160e01b600052602260045260246000fd5b91607f1691610eae565b9060009160005490610eea82610e9f565b80825291600190818116908115610f605750600114610f0857505050565b91929350600080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563916000925b848410610f4857505060209250010190565b80546020858501810191909152909301928101610f36565b915050602093945060ff929192191683830152151560051b010190565b9060009291805491610f8e83610e9f565b918282526001938481169081600014610ff05750600114610fb0575b50505050565b90919394506000526020928360002092846000945b838610610fdc575050505001019038808080610faa565b805485870183015294019385908201610fc5565b9294505050602093945060ff191683830152151560051b01019038808080610faa565b60005b8381106110265750506000910152565b8181015183820152602001611016565b9060209161104f81518092818552858086019101611013565b601f01601f1916010190565b602080820190808352835180925260408301928160408460051b8301019501936000915b84831061108f5750505050505090565b90919293949584806110ad600193603f198682030187528a51611036565b980193019301919493929061107f565b604051906040820182811067ffffffffffffffff821117610dde5760405260606020838281520152565b80548210156111035760005260206000209060011b0190600090565b634e487b7160e01b600052603260045260246000fd5b805468010000000000000000811015610dde5761113d9060019283820181556110e7565b61136457825180519167ffffffffffffffff92838111610dde5784906111638354610e9f565b93601f94858111611313575b506020908583116001146112aa5760209492916000918361129f575b5050600019600383901b1c191690831b1781555b019401518051928311610dde576111b68554610e9f565b828111611257575b5060209183116001146111f7579282939183926000946111ec575b50501b916000199060031b1c1916179055565b0151925038806111d9565b90601f198316918560005283826000209360005b8782821061123e57505010611225575b505050811b019055565b015160001960f88460031b161c1916905538808061121b565b848601518755909501946020948501948793500161120b565b8560005260206000208380860160051c82019260208710611296575b0160051c019085905b82811061128a5750506111be565b6000815501859061127c565b92508192611273565b01519050388061118b565b90601f1983169185600052816000209260005b8181106112fb575091859391856020989694106112e2575b505050811b01815561119f565b015160001960f88460031b161c191690553880806112d5565b8284015185558a9690940193602093840193016112bd565b909192506000848152602081208680860160051c8201936020871061135b575b908a9695949392910160051c01915b82811061135057505061116f565b818155899501611342565b93508193611333565b634e487b7160e01b600052600060045260246000fd5b6040519061138782610dc2565b60048252633ab9b2b960e11b6020830152565b90815260206040818301526101a09182604082015260006005918254946113c086610e9f565b806101e084015260019687811690816000146118a15750600114611844575b5060065460000b6060830152603f1990818385030160808401526000936007549061140982610e9f565b91828252888a821691826000146118265750506001146117cc575b505060085463ffffffff811660a0850152861c60000b60c0840152818385030160e08401526000936009549061145982610e9f565b91828252888a821691826000146117ae575050600114611754575b5050600a546101008401528284038201610120840152600b5460009461149982610e9f565b91828252888a821691826000146117365750506001146116dc575b5050600c54610140840152600d546101608401528284038201610180840152600e546000946114e282610e9f565b91828252888a821691826000146116be575050600114611664575b5050828403820190830152600f5460009361151782610e9f565b918282528789821691826000146116445750506001146115e6575b50506101c0908284030191015260009360105461154e81610e9f565b808452938183169182156115c757505060011461156d575b5050505090565b9293509060106000527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae67292846000945b8386106115b35750505050010138808080611566565b80548587018301529401938590820161159d565b925093929495505060ff1916848401521515901b010138808080611566565b8691929450600f6000527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80290886000925b85841061162e57505001019290506101c038611532565b80548385018601528994909301928a9101611617565b60ff191683820152921515871b90910190910193506101c0905038611532565b87929550600e6000527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd91896000935b8285106116a85750505001019238806114fd565b80548585018701528a95909401938b9101611694565b60ff191683820152921515881b9091019091019450389050806114fd565b87929550600b6000527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db991896000935b8285106117205750505001019238806114b4565b80548585018701528a95909401938b910161170c565b60ff191683820152921515881b9091019091019450389050806114b4565b8792955060096000527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af91896000935b828510611798575050500101923880611474565b80548585018701528a95909401938b9101611784565b60ff191683820152921515881b909101909101945038905080611474565b8792955060076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68891896000935b828510611810575050500101923880611424565b80548585018701528a95909401938b91016117fc565b60ff191683820152921515881b909101909101945038905080611424565b909250836000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db085876000925b84841061188b57505050610200915082010191386113df565b8054610200858801015201910190878791611872565b929450506102009160ff1916828401521515841b82010191386113df565b156118c657565b60405162461bcd60e51b815260206004820152601460248201527343616c6c6572206973206e6f74206f7261636c6560601b6044820152606490fd5b6040519061190f82610dc2565b6009825268185cdcda5cdd185b9d60ba1b6020830152565b60001981146119365760010190565b634e487b7160e01b600052601160045260246000fd5b91909160009080825260209060018252604080842094611979825161197081610df4565b86815282611b9a565b15611ad9575060028501805495600381019687549060ff82161115611ac457508488016119b581518551906119ad82610df4565b898252611b9a565b15611a8c575b5050508086016119da81518351906119d282610df4565b878252611b9a565b156119f5575050835461ff0019166101001790935550505050565b8395508496611a4092949395606060018060a01b0360045416935192015196611a52875198899687958694634b04236b60e01b86526004860152606060248601526064850190611036565b83810360031901604485015290611036565b03925af19081156105965750611a6757505050565b813d8311611a85575b611a7a8183610e10565b810103126101fa5750565b503d611a70565b6001611ab092611a9a6110bd565b925188840152611aa8611902565b835201611119565b611aba8154611927565b90553880806119bb565b61ff0019166101001790965550505050505050565b91505060039450611b049250611aed6110bd565b91611af6611902565b835282015260018301611119565b60028101611b128154611927565b905501805461ff001916610100179055565b67ffffffffffffffff8111610dde5760051b60200190565b90611b4682611b24565b611b536040519182610e10565b8281528092611b64601f1991611b24565b019060005b828110611b7557505050565b806060602080938501015201611b69565b80518210156111035760209160051b010190565b9060405191602092611bc8848281611bbb8183019687815193849201611013565b8101038084520182610e10565b51902091611be8604051918281611bbb8183019687815193849201611013565b519020149056fea26469706673582212200baa0ac57942ab1e3758c68910dbaa2c1819ce24d2aa01e0af0a4b5e04da738964736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1254,
        "contract": "contracts/PlotSetterAgent.sol:PlotSetterAgent",
        "label": "prompt",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 1277,
        "contract": "contracts/PlotSetterAgent.sol:PlotSetterAgent",
        "label": "agentRuns",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(AgentRun)1272_storage)"
      },
      {
        "astId": 1279,
        "contract": "contracts/PlotSetterAgent.sol:PlotSetterAgent",
        "label": "agentRunCount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 1287,
        "contract": "contracts/PlotSetterAgent.sol:PlotSetterAgent",
        "label": "owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 1289,
        "contract": "contracts/PlotSetterAgent.sol:PlotSetterAgent",
        "label": "oracleAddress",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 1296,
        "contract": "contracts/PlotSetterAgent.sol:PlotSetterAgent",
        "label": "config",
        "offset": 0,
        "slot": "5",
        "type": "t_struct(OpenAiRequest)3231_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Message)1259_storage)dyn_storage": {
        "base": "t_struct(Message)1259_storage",
        "encoding": "dynamic_array",
        "label": "struct PlotSetterAgent.Message[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_int8": {
        "encoding": "inplace",
        "label": "int8",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_struct(AgentRun)1272_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct PlotSetterAgent.AgentRun)",
        "numberOfBytes": "32",
        "value": "t_struct(AgentRun)1272_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(AgentRun)1272_storage": {
        "encoding": "inplace",
        "label": "struct PlotSetterAgent.AgentRun",
        "members": [
          {
            "astId": 1261,
            "contract": "contracts/PlotSetterAgent.sol:PlotSetterAgent",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 1265,
            "contract": "contracts/PlotSetterAgent.sol:PlotSetterAgent",
            "label": "messages",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_struct(Message)1259_storage)dyn_storage"
          },
          {
            "astId": 1267,
            "contract": "contracts/PlotSetterAgent.sol:PlotSetterAgent",
            "label": "responsesCount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 1269,
            "contract": "contracts/PlotSetterAgent.sol:PlotSetterAgent",
            "label": "max_iterations",
            "offset": 0,
            "slot": "3",
            "type": "t_uint8"
          },
          {
            "astId": 1271,
            "contract": "contracts/PlotSetterAgent.sol:PlotSetterAgent",
            "label": "is_finished",
            "offset": 1,
            "slot": "3",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Message)1259_storage": {
        "encoding": "inplace",
        "label": "struct PlotSetterAgent.Message",
        "members": [
          {
            "astId": 1256,
            "contract": "contracts/PlotSetterAgent.sol:PlotSetterAgent",
            "label": "role",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 1258,
            "contract": "contracts/PlotSetterAgent.sol:PlotSetterAgent",
            "label": "content",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(OpenAiRequest)3231_storage": {
        "encoding": "inplace",
        "label": "struct IOracle.OpenAiRequest",
        "members": [
          {
            "astId": 3206,
            "contract": "contracts/PlotSetterAgent.sol:PlotSetterAgent",
            "label": "model",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 3208,
            "contract": "contracts/PlotSetterAgent.sol:PlotSetterAgent",
            "label": "frequencyPenalty",
            "offset": 0,
            "slot": "1",
            "type": "t_int8"
          },
          {
            "astId": 3210,
            "contract": "contracts/PlotSetterAgent.sol:PlotSetterAgent",
            "label": "logitBias",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 3212,
            "contract": "contracts/PlotSetterAgent.sol:PlotSetterAgent",
            "label": "maxTokens",
            "offset": 0,
            "slot": "3",
            "type": "t_uint32"
          },
          {
            "astId": 3214,
            "contract": "contracts/PlotSetterAgent.sol:PlotSetterAgent",
            "label": "presencePenalty",
            "offset": 4,
            "slot": "3",
            "type": "t_int8"
          },
          {
            "astId": 3216,
            "contract": "contracts/PlotSetterAgent.sol:PlotSetterAgent",
            "label": "responseFormat",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 3218,
            "contract": "contracts/PlotSetterAgent.sol:PlotSetterAgent",
            "label": "seed",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 3220,
            "contract": "contracts/PlotSetterAgent.sol:PlotSetterAgent",
            "label": "stop",
            "offset": 0,
            "slot": "6",
            "type": "t_string_storage"
          },
          {
            "astId": 3222,
            "contract": "contracts/PlotSetterAgent.sol:PlotSetterAgent",
            "label": "temperature",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 3224,
            "contract": "contracts/PlotSetterAgent.sol:PlotSetterAgent",
            "label": "topP",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 3226,
            "contract": "contracts/PlotSetterAgent.sol:PlotSetterAgent",
            "label": "tools",
            "offset": 0,
            "slot": "9",
            "type": "t_string_storage"
          },
          {
            "astId": 3228,
            "contract": "contracts/PlotSetterAgent.sol:PlotSetterAgent",
            "label": "toolChoice",
            "offset": 0,
            "slot": "10",
            "type": "t_string_storage"
          },
          {
            "astId": 3230,
            "contract": "contracts/PlotSetterAgent.sol:PlotSetterAgent",
            "label": "user",
            "offset": 0,
            "slot": "11",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}